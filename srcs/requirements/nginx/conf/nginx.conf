# Questo file di configurazione specifica come Nginx deve gestire le richieste HTTP e HTTPS per un determinato dominio

# Il linguaggio utilizzato in questo file è il linguaggio di configurazione di Nginx, che è un linguaggio di configurazione 
# basato su blocchi e direttive. Ogni blocco è delimitato da parentesi graffe {} e contiene una serie di direttive 
# che specificano le impostazioni del server.

server {
	# Configura il server per ascoltare le connessioni HTTPS sulla porta 443.
	listen 443 ssl;
	# Configura il server per ascoltare le connessioni HTTPS sulla porta 443 per indirizzi IPv6.
	listen [::]:443 ssl;
	# Specifica il nome del server (dominio) per questo blocco di configurazione.
	server_name ldi-fior.42.rm;
	# Percorso del certificato SSL.
	ssl_certificate	/etc/nginx/ssl/ldi-fior.crt;
	# Percorso della chiave privata SSL.
	ssl_certificate_key	/etc/nginx/ssl/ldi-fior.key;
	# Configura il server per utilizzare il protocollo TLSv1.2 e TLSv1.3.
	ssl_protocols TLSv1.2 TLSv1.3;
	# Imposta la directory radice per i file serviti dal server.
	root /var/www/html;
	# Specifica i file di indice predefiniti.
	index index.php index.html;
	# Configura la gestione delle richieste per la radice del sito.(ciò che troviamo su /)
	location / {
		# Abilita l'indicizzazione automatica delle directory.
		autoindex on;
		# Tenta di servire il file richiesto. Se non esiste, restituisce un errore 404.
		try_files $uri $uri/ =404;
	}


	# Configura la gestione delle richieste per il percorso /wordpress. (ciò che troviamo su /wordpress)
	location /wordpress {
		#  Tenta di servire il file richiesto. Se non esiste, reindirizza la richiesta a index.php con i parametri della query.
    	try_files $uri $uri/ /wordpress/index.php?$args; 
		# Configura la gestione delle richieste per i file PHP.   
    	location ~ \.php$ {
			# parso gli URL che terminano con .php 
        	fastcgi_split_path_info ^(.+\.php)(/.+)$;
			# instrado le richieste PHP al container WordPress
        	fastcgi_pass wordpress:9000;
			# Specifica il file di indice predefinito per le richieste FastCGI,
			# Se una directory viene richiesta senza un file specifico, index.php 
			# verrà utilizzato come file predefinito.
			#
			# Le richieste FastCGI sono richieste HTTP che vengono inoltrate 
			# dal server web (come Nginx) a un'applicazione backend (come PHP-FPM) 
			# utilizzando il protocollo FastCGI. Questo permette al server web di 
			# delegare l'elaborazione delle richieste dinamiche (come gli script PHP) 
			# a un'applicazione esterna, migliorando le prestazioni e la scalabilità.
        	fastcgi_index index.php;
			# Include i parametri FastCGI predefiniti.
			# Questo file di configurazione contiene le variabili di ambiente necessarie 
			# per le richieste FastCGI.
        	include fastcgi_params;
			# Imposta il percorso assoluto del file PHP da eseguire. 
			# Combina la radice del documento ($document_root) con il nome dello 
			# script FastCGI ($fastcgi_script_name).
        	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			# Imposta le informazioni sul percorso per la richiesta FastCGI. 
			# Questo parametro contiene la parte del percorso che segue il nome dello script PHP.
        	fastcgi_param PATH_INFO $fastcgi_path_info;
		}
	}
}
